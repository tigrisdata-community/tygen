name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DATABASE_URL: postgresql://admin:hunter2@localhost/project?sslmode=disable
  REDIS_URL: redis://valkey:6379/0

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    services:
      postgres:
        image: "postgres:16"
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: hunter2
          POSTGRES_DB: project
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-tags: true
          fetch-depth: 0

      - name: Install Nodejs
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 22

      - name: Install deps
        run: npm ci

      - name: Install Go
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "stable"

      - name: Cache Go dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-golang-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golang-

      - name: Test
        run: npm run test
